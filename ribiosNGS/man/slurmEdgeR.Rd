% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slurm.R
\name{slurmEdgeR}
\alias{slurmEdgeR}
\title{Send an edgeR analysis job to SLURM}
\usage{
slurmEdgeR(dgeList, designMatrix, contrastMatrix, outfilePrefix = NULL,
  outdir = "edgeR_output", overwrite = c("ask", "yes", "no"))
}
\arguments{
\item{dgeList}{An \code{DGEList} object with \code{counts}, \code{genes}, and \code{samples}}

\item{designMatrix}{The design matrix to model the data}

\item{contrastMatrix}{The contrast matrix matching the design matrix}

\item{outfilePrefix}{Prefix of the output files. It can include directories, e.g. \code{"data/outfile-"}. In case of \code{NULL}, temporary files will be created.}

\item{outdir}{Output directory of the edgeR script. Default value "edgeR_output".}

\item{overwrite}{If \code{ask}, the user is asked before an existing output directory is overwritten. If \code{yes}, the job will start and an existing directory will be overwritten anyway. If \code{no}, and if an output directory is present, the job will not be started.}
}
\value{
The output of the SLURM command in bash
}
\description{
Send an edgeR analysis job to SLURM
}
\note{
Even if the output directory is empty, if \code{overwrite} is set to \code{no} (or if the user answers \code{no}), the job will not be started.
}
\examples{
 mat <- matrix(rnbinom(100, mu=5, size=2), ncol=10)
 rownames(mat) <- sprintf("gene\%d", 1:nrow(mat))
 myFac <- gl(2,5, labels=c("Control", "Treatment"))
 y <- edgeR::DGEList(counts=mat, group=myFac)
 myDesign <- model.matrix(~myFac); colnames(myDesign) <- levels(myFac)
 myContrast <- limma::makeContrasts(Treatment, levels=myDesign)
 \dontrun{
 slurmEdgeR(y, designMatrix=myDesign, contrastMatrix=myContrast, 
   outfilePrefix=NULL, outdir=tempdir())
 }
}
